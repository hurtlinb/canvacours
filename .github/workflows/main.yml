name: Deploy via SSH (git pull)

on:
  push:
    branches:
      - main   # <-- remplace par ta branche si besoin

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy on Infomaniak (SSH + git pull)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASS }}
          port: ${{ secrets.SSH_PORT }}
          script_stop: true
          script: |
            set -e

            APP_DIR="${{ secrets.APP_DIR }}"
            BRANCH="main"  # <-- garde en phase avec 'on.push.branches'
            NODE_ENV_VAL="${{ secrets.NODE_ENV || 'production' }}"
            PM2_APP="${{ secrets.PM2_APP }}"

            echo "➡️  CD ${APP_DIR}"
            cd "${APP_DIR}"

            echo "➡️  Reset local changes (plus robuste que pull)"
            git fetch origin "${BRANCH}"
            git checkout "${BRANCH}"
            git reset --hard "origin/${BRANCH}"

            echo "➡️  Install deps (prod) & build"
            export NODE_ENV="${NODE_ENV_VAL}"
            if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
              npm ci --omit=dev
            else
              npm install --omit=dev
            fi
            npm run build --if-present

            echo "➡️  Migrations (si présent)"
            npm run migrate --if-present

            echo "➡️  PM2 (optionnel)"
            if [ -n "${PM2_APP}" ]; then
              if pm2 list | grep -q "${PM2_APP}"; then
                pm2 reload "${PM2_APP}" --update-env
              else
                pm2 start npm --name "${PM2_APP}" -- start
              fi
              pm2 save
            fi

            echo "✅ Déploiement terminé"
